from mqhad.architecture_generator.chip import ChipInfo

class TestChip:
    def test_load_from_file(self):
        chip = ChipInfo()
        chip.load_from_file('mqhad/tests/test_chip/17q_bus2.chip')
        assert chip.qubit_num == 17
        assert chip.coupling_list == [[2, 6], [2, 3], [6, 7], [3, 7], [7, 11], 
        [11, 15], [3, 4], [0, 4], [7, 8], [4, 8], [11, 12], [8, 12], [15, 16], 
        [12, 16], [0, 1], [4, 5], [1, 5], [8, 9], [5, 9], [12, 13], [9, 13], 
        [9, 10], [13, 14], [10, 14]]
        assert chip.grid_edge_list == [[2, 6], [2, 3], [6, 7], [3, 7], [7, 11], 
        [11, 15], [3, 4], [0, 4], [7, 8], [4, 8], [11, 12], [8, 12], 
        [15, 16], [12, 16], [0, 1], [4, 5], [1, 5], [8, 9], [5, 9], 
        [12, 13], [9, 13], [9, 10], [13, 14], [10, 14]]
        assert chip.via_edge_list == [[2, 3, 4], [6, 7, 8], [3, 4, 5], [7, 8, 9], 
        [11, 12, 13], [8, 9, 10], [12, 13, 14], [3, 7, 11], [7, 11, 15], [0, 4, 8], 
        [4, 8, 12], [8, 12, 16], [1, 5, 9], [5, 9, 13]]
        assert chip.edge_list == [[4, 1], [0, 5], [6, 3], [2, 7, 4], [3, 0, 8, 5], 
        [4, 1, 9], [2, 7], [6, 3, 11, 8], [7, 4, 12, 9], [8, 5, 13, 10], [9, 14], 
        [7, 15, 12], [11, 8, 16, 13], [12, 9, 14], [13, 10], [11, 16], [15, 12]]
        assert chip.qubitgrid == [[-1, 2, 6, -1, -1], [-1, 3, 7, 11, 15], 
        [0, 4, 8, 12, 16], [1, 5, 9, 13, -1], [-1, -1, 10, 14, -1]]
        assert chip.adj_mat == [[0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
        [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], 
        [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0], 
        [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], 
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0]]
        assert chip.crossbuslist == []
        